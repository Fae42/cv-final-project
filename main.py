# -*- coding: utf-8 -*-
import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPalette, QBrush, QPixmap
from PyQt5.QtWidgets import QMainWindow, QApplication

from GUI.attribute import Attribute
from GUI.detect import Detect
from GUI.find import Find
from GUI.stream import Stream
from GUI.verify import Verify


# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 640)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btnAttribute = QtWidgets.QPushButton(self.centralwidget)
        self.btnAttribute.setGeometry(QtCore.QRect(125, 210, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(18)
        self.btnAttribute.setFont(font)
        self.btnAttribute.setObjectName("btnAttribute")
        self.btnStream = QtWidgets.QPushButton(self.centralwidget)
        self.btnStream.setGeometry(QtCore.QRect(125, 290, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(18)
        self.btnStream.setFont(font)
        self.btnStream.setObjectName("btnStream")
        self.btnDetect = QtWidgets.QPushButton(self.centralwidget)
        self.btnDetect.setGeometry(QtCore.QRect(125, 370, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(18)
        self.btnDetect.setFont(font)
        self.btnDetect.setObjectName("btnDetect")
        self.btnFind = QtWidgets.QPushButton(self.centralwidget)
        self.btnFind.setGeometry(QtCore.QRect(125, 450, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(18)
        self.btnFind.setFont(font)
        self.btnFind.setObjectName("btnFind")
        self.btnVerify = QtWidgets.QPushButton(self.centralwidget)
        self.btnVerify.setGeometry(QtCore.QRect(125, 530, 350, 60))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(18)
        self.btnVerify.setFont(font)
        self.btnVerify.setObjectName("btnVerify")

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 168, 580, 20))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.line.raise_()
        self.line1 = QtWidgets.QFrame(self.centralwidget)
        self.line1.setGeometry(QtCore.QRect(10, 165, 580, 20))
        self.line1.setFrameShape(QtWidgets.QFrame.HLine)
        self.line1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line1.setObjectName("line")
        self.line1.raise_()
        self.line2 = QtWidgets.QFrame(self.centralwidget)
        self.line2.setGeometry(QtCore.QRect(10, 162, 580, 20))
        self.line2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line2.setObjectName("line")
        self.line2.raise_()

        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(200, 30, 350, 81))
        self.label_2.setStyleSheet("font: 75 26pt \"Segoe Print\";\n"
                                   "color:rgb(255, 85, 0);\n"
                                   "text-align:center;\n"
                                   "letter-spacing:4pt;")
        self.label_2.setObjectName("label_2")
        self.label_2.raise_()

        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(79, 110, 500, 60))
        self.label_3.setStyleSheet("font: 25 11pt \"Segoe Print\";\n"
                                   "color:rgb(255, 85, 0);\n"
                                   "text-align:center;\n"
                                   "letter-spacing:4pt;")
        self.label_3.setObjectName("label_2")
        self.label_3.raise_()




        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.btnAttribute.clicked.connect(MainWindow.btnAttribute_Clicked) # type: ignore
        self.btnStream.clicked.connect(MainWindow.btnStream_Clicked) # type: ignore
        self.btnDetect.clicked.connect(MainWindow.btnDetect_Clicked) # type: ignore
        self.btnFind.clicked.connect(MainWindow.btnFind_Clicked) # type: ignore
        self.btnVerify.clicked.connect(MainWindow.btnVerify_Clicked) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        palette = QPalette()
        palette.setBrush(QPalette.Background, QBrush(QPixmap("./GUI/background.jpg")))
        self.setPalette(palette)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CS308 project"))
        self.btnAttribute.setText(_translate("MainWindow", "Face Attribute(image)"))
        self.btnStream.setText(_translate("MainWindow", "Video Face Detector"))
        self.btnDetect.setText(_translate("MainWindow", "Image Face Detector"))
        self.btnFind.setText(_translate("MainWindow", "Find Matching Faces"))
        self.btnVerify.setText(_translate("MainWindow", "Face Verification"))
        self.label_2.setText(_translate("MainWindow", "DeepFace"))
        self.label_3.setText(_translate("MainWindow", "<<< A facial recognition and analysis system >>>"))

class FirstWindowActions(Ui_MainWindow, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)

    def btnAttribute_Clicked(self):
        self.scend_window = Attribute_Action()
        self.scend_window.show()
        self.close()

    def btnStream_Clicked(self):
        self.scend_window = Stream_Action()
        self.scend_window.show()
        self.close()

    def btnDetect_Clicked(self):
        self.scend_window = Detect_Action()
        self.scend_window.show()
        self.close()

    def btnFind_Clicked(self):
        self.scend_window = Find_Action()
        self.scend_window.show()
        self.close()

    def btnVerify_Clicked(self):
        self.scend_window = Verify_Action()
        self.scend_window.show()
        self.close()

class Attribute_Action(Attribute, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.back.clicked.connect(self.go_back)

    def go_back(self):
        self.window = FirstWindowActions()
        self.window.show()
        self.close()

class Stream_Action(Stream, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.back.clicked.connect(self.go_back)

    def go_back(self):
        self.window = FirstWindowActions()
        self.window.show()
        self.close()

class Detect_Action(Detect, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.back.clicked.connect(self.go_back)

    def go_back(self):
        self.window = FirstWindowActions()
        self.window.show()
        self.close()

class Find_Action(Find, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.back.clicked.connect(self.go_back)

    def go_back(self):
        self.window = FirstWindowActions()
        self.window.show()
        self.close()

class Verify_Action(Verify, QMainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        self.back.clicked.connect(self.go_back)

    def go_back(self):
        self.window = FirstWindowActions()
        self.window.show()
        self.close()

if __name__ == '__main__':
    app = QApplication(sys.argv)
    # 显示创建的界面
    MainWindow = FirstWindowActions()  # 创建窗体对象
    MainWindow.show()  # 显示窗体

    sys.exit(app.exec_())  # 程序关闭时退出进程

